{"version":3,"sources":["meteor://ðŸ’»app/packages/miro_mailchimp/packages/miro_mailchimp.js"],"names":[],"mappingsfile":"/packages/miro_mailchimp.js","sourcesContent":["(function () {\n\n///////////////////////////////////////////////////////////////////////////////\n//                                                                           //\n// packages/miro:mailchimp/lib/server/mailchimp.js                           //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n                                                                             //\nvar getSettingsValueFor = function ( key ) {                                 // 1\n\t\tif (                                                                       // 2\n\t\t\tMeteor.settings &&                                                        // 3\n\t\t\tMeteor.settings.private &&                                                // 4\n\t\t\tMeteor.settings.private.MailChimp                                         // 5\n\t\t) {                                                                        // 6\n\t\t\treturn Meteor.settings.private.MailChimp[ key ];                          // 7\n\t\t}                                                                          // 8\n\t};                                                                          // 9\n                                                                             // 10\nMailChimp = function ( apiKey, options ) {                                   // 11\n\tvar mailChimpOptions = {                                                    // 12\n\t\t\t'apiKey' : apiKey || getSettingsValueFor( 'apiKey' ),                     // 13\n\t\t\t'options': options || {                                                   // 14\n\t\t\t\t'version': '2.0'\t// Old, proven stuff... ;)                              // 15\n\t\t\t}                                                                         // 16\n\t\t};                                                                         // 17\n                                                                             // 18\n\tif ( !mailChimpOptions.apiKey || mailChimpOptions.apiKey === '' ) {         // 19\n                                                                             // 20\n\t\tconsole.error( '[MailChimp] Error: No API Key defined!' );                 // 21\n                                                                             // 22\n\t\tthrow new Meteor.Error(                                                    // 23\n\t\t\t'No API Key',                                                             // 24\n\t\t\t'No API Key defined',                                                     // 25\n\t\t\t'Define your API Key either in settings.json file or in a method call'    // 26\n\t\t);                                                                         // 27\n\t}                                                                           // 28\n                                                                             // 29\n\tthis._asyncAPI = Npm.require( 'mailchimp' ).MailChimpAPI(                   // 30\n\t\tmailChimpOptions.apiKey,                                                   // 31\n\t\tmailChimpOptions.options                                                   // 32\n\t);                                                                          // 33\n};                                                                           // 34\n                                                                             // 35\nMailChimp.prototype.call = function ( section, method, options, callback ) { // 36\n\tif ( callback && typeof callback === 'function' ) {                         // 37\n\t\t// If anyone still wants to use old-fashioned callback method              // 38\n\t\tthis._asyncAPI.call( section, method, options, callback );                 // 39\n\t} else {                                                                    // 40\n\t\ttry {                                                                      // 41\n\t\t\tvar wrapped = Meteor.wrapAsync( this._asyncAPI.call, this._asyncAPI );    // 42\n                                                                             // 43\n\t\t\treturn wrapped( section, method, options );                               // 44\n\t\t} catch ( error ) {                                                        // 45\n\t\t\t// A workaround for:                                                      // 46\n\t\t\t// https://github.com/meteor/meteor/issues/2774                           // 47\n\t\t\tif ( !error.error ) {                                                     // 48\n\t\t\t\tthrow new Meteor.Error( error.code, error.message );                     // 49\n\t\t\t} else {                                                                  // 50\n\t\t\t\tthrow new Meteor.Error( error );                                         // 51\n\t\t\t}                                                                         // 52\n\t\t}                                                                          // 53\n\t}                                                                           // 54\n};                                                                           // 55\n                                                                             // 56\nMeteor.methods({                                                             // 57\n\t'MailChimp': function ( clientOptions, section, method, options ) {         // 58\n\t\tcheck( clientOptions, Object );                                            // 59\n\t\tcheck( section, String );                                                  // 60\n\t\tcheck( method, String );                                                   // 61\n\t\tcheck( options, Object );                                                  // 62\n                                                                             // 63\n\t\tvar mailChimp,                                                             // 64\n\t\t\tmailChimpOptions = _.defaults( {}, options );                             // 65\n                                                                             // 66\n\t\ttry {                                                                      // 67\n\t\t\tmailChimp = new MailChimp( clientOptions.apiKey, clientOptions.options ); // 68\n\t\t} catch ( error ) {                                                        // 69\n\t\t\tthrow new Meteor.Error( error.error, error.reason, error.details );       // 70\n\t\t}                                                                          // 71\n                                                                             // 72\n\t\tswitch ( section ) {                                                       // 73\n\t\t\tcase 'lists':                                                             // 74\n\t\t\t\tif ( !mailChimpOptions.id || mailChimpOptions.id === '' ) {              // 75\n\t\t\t\t\tmailChimpOptions.id = getSettingsValueFor( 'listId' );                  // 76\n\t\t\t\t}                                                                        // 77\n                                                                             // 78\n\t\t\t\tbreak;                                                                   // 79\n\t\t\tdefault:                                                                  // 80\n\t\t}                                                                          // 81\n                                                                             // 82\n\t\treturn mailChimp.call( section, method, mailChimpOptions );                // 83\n\t}                                                                           // 84\n});                                                                          // 85\n                                                                             // 86\n///////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}